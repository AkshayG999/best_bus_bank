name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          check-latest: true

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/best_bus_backend:latest .

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/best_bus_backend:latest

      - name: SSH to EC2 and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKER_USERNAME }}/best_bus_backend:latest

            # Stop and remove old containers running the image
            docker ps -q --filter "ancestor=${{ secrets.DOCKER_USERNAME }}/best_bus_backend:latest" | xargs -r docker stop
            docker ps -a -q --filter "ancestor=${{ secrets.DOCKER_USERNAME }}/best_bus_backend:latest" | xargs -r docker rm

            # Run a new container from the latest image
            docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/best_bus_backend:latest
